import axios, { AxiosError } from "axios";
import type { NextPageContext } from "next";
import Error from "next/error";
import Head from "next/head";
import styled from "styled-components";
import ContentCard from "../../../Components/ContentCard";
import TitleComponent from "../../../Components/Title";
import { Client } from "../../../Models/Client";
import { Movie } from "../../../Models/Movie";
import { Rental } from "../../../Models/Rental";
import LayoutTemplate from "../../../Templates/Layout";
import RentalRegistration from "../../../Components/Registration/Rental"

const Wrapper = styled.div`
    padding: 24px;
`;

interface IUpdateLocationProps {
    location?: Rental;
    clients: Client[];
    movies: Movie[];
}

const UpdateLocation = ({ location, clients, movies }: IUpdateLocationProps) => {

    if (!location) return <Error statusCode={404} />;
    return (
        <>
            <Head>
                <title>Rental Company</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <LayoutTemplate>
                <Wrapper>
                    <TitleComponent>Atualizar Cadastro de Cliente</TitleComponent>
                    <ContentCard responsive>
                        <RentalRegistration
                            location={location}
                            clients={clients}
                            movies={movies}
                        />
                    </ContentCard>
                </Wrapper>
            </LayoutTemplate>
        </>
    );
};

UpdateLocation.getInitialProps = async ({ res, query }: NextPageContext) => {
    const location = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/location/${query.locationId}`)
        .then(res => res.data)
        .catch((error: AxiosError) => {
            return null;
        });

    const clients = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/client`)
        .then(res => res.data)
        .catch((res: AxiosError) => []);
    
    const movies = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/movie`)
        .then(res => res.data)
        .catch((res: AxiosError) => []);

    return { location, clients, movies }
}

export default UpdateLocation;
